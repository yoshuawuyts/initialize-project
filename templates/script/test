#!/bin/sh

dirname=$(dirname "$(readlink -f "$0")")

garnish="$dirname/../node_modules/.bin/garnish"
dependency_check="$dirname/../node_modules/.bin/dependency-check"
nyc="$dirname/../node_modules/.bin/nyc"
standard="$dirname/../node_modules/.bin/standard"
tap="$dirname/../node_modules/.bin/tap"
npm_shrinkwrap="$dirname/../node_modules/.bin/npm-shrinkwrap"

usage () {
cat << USAGE
script/test - run testing facilities

  Usage: script/test <cmd> [flags]

  Options:
   -h, --help   Output usage information

  Commands:
    <none>             Run full test suite
    d, dependencies    Validate dependencies
    c, coverage        Report test coverage
    s, shrinkwrap      Validate npm shrinkwrapping consistency
    *                  Run test with <name>

  Examples:
    script/test bundle   # output browserify bundle size
    script/test          # run full test suite
    script/test server   # run test/server.js
USAGE
}

run_test_suite () {
  if [ "$1" ]; then
    testfile="test/$1.js"
    [ -f "$testfile" ] || { printf "Could not find %s\n" "$testfile"; exit 1; }

    set -e
    "$standard" "$testfile"
    node "$testfile" | "$garnish"
    set +e
  else
    set -e
    "$standard" "$dirname/../*.js" "$dirname/../*/*.js"
    check_deps
    [ ! "$NODE_ENV" ] && export NODE_ENV='test'
    "$nyc" "$tap" 'test/*'
    set +e
  fi
}
shrinkwrap_check () {
  "$npm_shrinkwrap"
}
check_deps () {
  "$dependency_check" . --entry 'client.js'
  "$dependency_check" . --entry 'client.js' --extra --no-dev \
    -i brfs \
    -i css-wipe \
    -i insert-css \
    -i tachyons \
    -i sheetify-cssnext
}

report_coverage () {
  "$nyc" report --reporter=text-lcov
}

# set CLI flags
getopt -T > /dev/null
if [ "$?" -eq 4 ]; then args="$(getopt --long help --options h -- "$*")"
else args="$(getopt h "$*")"; fi
[ ! $? -eq 0 ] && { usage && exit 2; }
eval set -- "$args"

# parse CLI flags
while true; do
  case "$1" in
    -h|--help) usage && exit 1 ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

case "$1" in
  d|deps|dependencies) shift; check_deps "$@" ;;
  c|cov|coverage) shift; report_coverage "$@" ;;
  s|shrink|shrinkwrap) shift; shrinkwrap_check ;;
  *) run_test_suite "$@" ;;
esac
